<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://frida.re/feed.xml" rel="self" type="application/atom+xml" /><link href="https://frida.re/" rel="alternate" type="text/html" hreflang="en" /><updated>2023-12-25T09:11:28+01:00</updated><id>https://frida.re/feed.xml</id><title type="html">Frida • A world-class dynamic instrumentation toolkit</title><subtitle>Observe and reprogram running programs on Windows, macOS, GNU/Linux, iOS, watchOS, tvOS, Android, FreeBSD, and QNX</subtitle><entry><title type="html">Frida 16.1.10 Released</title><link href="https://frida.re/news/2023/12/24/frida-16-1-10-released/" rel="alternate" type="text/html" title="Frida 16.1.10 Released" /><published>2023-12-24T09:04:29+01:00</published><updated>2023-12-24T09:04:29+01:00</updated><id>https://frida.re/news/2023/12/24/frida-16-1-10-released</id><content type="html" xml:base="https://frida.re/news/2023/12/24/frida-16-1-10-released/">&lt;p&gt;Some neat little bug-fixes, just in time for Christmas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;server: Add missing entitlements for iOS 16, required to remap binary files in
memory. Thanks &lt;a href=&quot;https://x.com/as0ler&quot;&gt;@as0ler&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;android: Fix Java hooking of interpreter-run methods on Android 14.&lt;/li&gt;
  &lt;li&gt;Fix argv[0] shown in CLI tools such as frida-server and frida-inject. Thanks
&lt;a href=&quot;https://github.com/bet4it&quot;&gt;@bet4it&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry><entry><title type="html">Frida 16.1.9 Released</title><link href="https://frida.re/news/2023/12/20/frida-16-1-9-released/" rel="alternate" type="text/html" title="Frida 16.1.9 Released" /><published>2023-12-20T00:40:51+01:00</published><updated>2023-12-20T00:40:51+01:00</updated><id>https://frida.re/news/2023/12/20/frida-16-1-9-released</id><content type="html" xml:base="https://frida.re/news/2023/12/20/frida-16-1-9-released/">&lt;p&gt;Quite a few goodies in this release:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;interceptor: Pause cloaked threads too. This prevents random SIGBUS crashes on
our own threads while using Interceptor to hook functions residing on the same
page as any of the ones potentially used internally. Thanks &lt;a href=&quot;https://x.com/bezjaje&quot;&gt;@mrmacete&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;darwin: Move to our POSIX Exceptor backend. Mach exception handling APIs have
become increasingly restrictive in recent Apple OS versions.&lt;/li&gt;
  &lt;li&gt;darwin: Resolve import trampolines on arm64, allowing us to hook targets such
as sigaction().&lt;/li&gt;
  &lt;li&gt;linux: Improve spawn() to handle r_brk being hit again.&lt;/li&gt;
  &lt;li&gt;linker: Improve spawn() to consider on-disk ELF for RTLD symbols. This means
we might find r_debug on additional Android systems, for example.&lt;/li&gt;
  &lt;li&gt;linux: Fix spawn() when DT_INIT_ARRAY contains sentinel values.&lt;/li&gt;
  &lt;li&gt;linux: Improve spawn() to use DT_PREINIT_ARRAY if present.&lt;/li&gt;
  &lt;li&gt;android: Handle symlinks in RTLD fallback logic.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry><entry><title type="html">Frida 16.1.8 Released</title><link href="https://frida.re/news/2023/11/28/frida-16-1-8-released/" rel="alternate" type="text/html" title="Frida 16.1.8 Released" /><published>2023-11-28T22:06:07+01:00</published><updated>2023-11-28T22:06:07+01:00</updated><id>https://frida.re/news/2023/11/28/frida-16-1-8-released</id><content type="html" xml:base="https://frida.re/news/2023/11/28/frida-16-1-8-released/">&lt;p&gt;Three exciting changes this time around:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;process: Add &lt;em&gt;get_main_module()&lt;/em&gt;, exposed to JavaScript as
&lt;em&gt;Process.mainModule&lt;/em&gt;. Useful when needing to know which module represents the
main executable of the process. In the past this was typically accomplished
by enumerating the loaded modules and assuming that the first one in the list
is the one. This is no longer the case on the latest Apple OSes, so we now
provide an efficient and portable solution with this new API. Thanks
&lt;a href=&quot;https://x.com/bezjaje&quot;&gt;@mrmacete&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;compiler: Bump @types/frida-gum to 18.5.0, now with typings for recent API
additions.&lt;/li&gt;
  &lt;li&gt;barebone: Fix compatibility with latest Corellium.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry><entry><title type="html">Frida 16.1.7 Released</title><link href="https://frida.re/news/2023/11/16/frida-16-1-7-released/" rel="alternate" type="text/html" title="Frida 16.1.7 Released" /><published>2023-11-16T09:01:31+01:00</published><updated>2023-11-16T09:01:31+01:00</updated><id>https://frida.re/news/2023/11/16/frida-16-1-7-released</id><content type="html" xml:base="https://frida.re/news/2023/11/16/frida-16-1-7-released/">&lt;p&gt;Some neat refinements this time around:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;stalker: Allow transformer to skip calls on x86. Thanks &lt;a href=&quot;https://github.com/s1341&quot;&gt;@s1341&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;objc: Tolerate mangled Swift class names. Thanks &lt;a href=&quot;https://x.com/hsorbo&quot;&gt;@hsorbo&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;cpu-features: Improve the AVX2 detection. Thanks for the assist, &lt;a href=&quot;https://github.com/smx-smx&quot;&gt;@smx-smx&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;windows: Add support for MinGW. Thanks for the assist, &lt;a href=&quot;https://github.com/smx-smx&quot;&gt;@smx-smx&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;openssl: Upgrade to openssl-3.0.12+quic@b81f0ae.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry><entry><title type="html">Frida 16.1.6 Released</title><link href="https://frida.re/news/2023/11/13/frida-16-1-6-released/" rel="alternate" type="text/html" title="Frida 16.1.6 Released" /><published>2023-11-13T22:43:57+01:00</published><updated>2023-11-13T22:43:57+01:00</updated><id>https://frida.re/news/2023/11/13/frida-16-1-6-released</id><content type="html" xml:base="https://frida.re/news/2023/11/13/frida-16-1-6-released/">&lt;p&gt;Just a quick bug-fix release to roll back two of the Interceptor/Relocator arm64
changes that went into the previous release. Turns out that these need some more
refinement before they can land, so we will roll them back for now.&lt;/p&gt;

&lt;h3 id=&quot;changelog&quot;&gt;Changelog&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Revert “relocator: Improve scratch register strategy on arm64”.&lt;/li&gt;
  &lt;li&gt;Revert “interceptor: Relocate tiny targets on arm64”.&lt;/li&gt;
  &lt;li&gt;stalker: Allow transformer to skip calls on arm64.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry><entry><title type="html">Frida 16.1.5 Released</title><link href="https://frida.re/news/2023/11/04/frida-16-1-5-released/" rel="alternate" type="text/html" title="Frida 16.1.5 Released" /><published>2023-11-04T21:11:20+01:00</published><updated>2023-11-04T21:11:20+01:00</updated><id>https://frida.re/news/2023/11/04/frida-16-1-5-released</id><content type="html" xml:base="https://frida.re/news/2023/11/04/frida-16-1-5-released/">&lt;p&gt;Since our last release, &lt;a href=&quot;https://x.com/hsorbo&quot;&gt;@hsorbo&lt;/a&gt; and I had a lot of fun pair-programming on a
wide range of exciting tech. Let’s dive right in.&lt;/p&gt;

&lt;h2 id=&quot;swift&quot;&gt;Swift&lt;/h2&gt;

&lt;p&gt;We’ve introduced a brand new ApiResolver for Swift, which you can use like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ApiResolver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;swift&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enumerateMatches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;functions:*CoreDevice!*RemoteDevice*&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Found:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;at:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There’s also a new and exciting frida-tools release, 12.3.0, which upgrades
frida-trace with Swift tracing support, using the new ApiResolver:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;frida-trace Xcode &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;*CoreDevice!*RemoteDevice*&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;module&quot;&gt;Module&lt;/h2&gt;

&lt;p&gt;Our Module API now also provides &lt;em&gt;enumerateSections()&lt;/em&gt; and
&lt;em&gt;enumerateDependencies()&lt;/em&gt;. And for when you want to scan loaded modules for
specific section names, our existing &lt;em&gt;module&lt;/em&gt; ApiResolver now lets you do
this with ease:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ApiResolver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enumerateMatches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;sections:*!*text*/i&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Found:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;at:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;eof&quot;&gt;EOF&lt;/h2&gt;

&lt;p&gt;There’s also a bunch of other exciting changes, so definitely check out the
changelog below.&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;h3 id=&quot;changelog&quot;&gt;Changelog&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;swift-api-resolver: Add a brand new Swift API Resolver.&lt;/li&gt;
  &lt;li&gt;module-api-resolver: Support resolving sections.&lt;/li&gt;
  &lt;li&gt;api-resolver: Add optional &lt;em&gt;size&lt;/em&gt; field to matches.&lt;/li&gt;
  &lt;li&gt;module: Add enumerate_sections().&lt;/li&gt;
  &lt;li&gt;module: Add enumerate_dependencies().&lt;/li&gt;
  &lt;li&gt;device: Add unpair(). Only implemented for iOS-devices for now.&lt;/li&gt;
  &lt;li&gt;compiler: Bump frida-compile to 16.4.1, and @types/frida-gum to 18.4.5.&lt;/li&gt;
  &lt;li&gt;gdb: Handle empty response packets.&lt;/li&gt;
  &lt;li&gt;gdb: Handle error reply to feature document request.&lt;/li&gt;
  &lt;li&gt;darwin-mapper: Initialize TLV descriptors on load. Thanks &lt;a href=&quot;https://github.com/fabianfreyer&quot;&gt;@fabianfreyer&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;darwin-module: Add Thread Local Variable APIs. Thanks &lt;a href=&quot;https://github.com/fabianfreyer&quot;&gt;@fabianfreyer&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;darwin-module: Optimize exports enumeration slightly.&lt;/li&gt;
  &lt;li&gt;elf-module: Improve the section ID generation.&lt;/li&gt;
  &lt;li&gt;x86-writer: Add reg-reg {fs,gs}-based MOV insns. Thanks &lt;a href=&quot;https://github.com/fabianfreyer&quot;&gt;@fabianfreyer&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;arm64-writer: Add MRS instruction. Thanks &lt;a href=&quot;https://github.com/fabianfreyer&quot;&gt;@fabianfreyer&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;arm64-writer: Add UBFM, LSL, and LSR instructions. Thanks &lt;a href=&quot;https://github.com/fabianfreyer&quot;&gt;@fabianfreyer&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;relocator: Improve scratch register strategy on arm64.&lt;/li&gt;
  &lt;li&gt;interceptor: Branch to trampoline using computed scratch register.&lt;/li&gt;
  &lt;li&gt;interceptor: Relocate tiny targets on arm64.&lt;/li&gt;
  &lt;li&gt;linux: Handle disabled process_vm_{read,write}v(). Thanks &lt;a href=&quot;https://github.com/Pyraun&quot;&gt;@Pyraun&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;server: Use sysroot for temporary files on rootless iOS. Thanks
&lt;a href=&quot;https://github.com/fabianfreyer&quot;&gt;@fabianfreyer&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;gumjs: Fix crash in File and Database when Interceptor is absent. Thanks
&lt;a href=&quot;https://x.com/bezjaje&quot;&gt;@mrmacete&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;gumjs: Fix NativePointer from number for 32-bit BE (#752). Thanks &lt;a href=&quot;https://github.com/forky2&quot;&gt;@forky2&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;gumjs: Bump frida-swift-bridge to 2.0.7.&lt;/li&gt;
  &lt;li&gt;ci: Publish prebuilds for Node.js 20 &amp;amp; 21, and Electron 27.&lt;/li&gt;
  &lt;li&gt;ci: Do not publish Swift bindings for now. There’s a long-standing heisenbug
that causes the x86_64 slice to randomly end up corrupted, in turn resulting
in CI release jobs failing. As I’m not too keen on sinking time into this
anytime soon, considering how easy it is to build these bindings locally using
a downloaded core devkit, simply dropping the release asset seems like the
best solution.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry><entry><title type="html">Frida 16.1.4 Released</title><link href="https://frida.re/news/2023/08/29/frida-16-1-4-released/" rel="alternate" type="text/html" title="Frida 16.1.4 Released" /><published>2023-08-29T15:58:08+02:00</published><updated>2023-08-29T15:58:08+02:00</updated><id>https://frida.re/news/2023/08/29/frida-16-1-4-released</id><content type="html" xml:base="https://frida.re/news/2023/08/29/frida-16-1-4-released/">&lt;p&gt;Some exciting improvements this time around:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ios: Fix spawn() on iOS 17. Thanks &lt;a href=&quot;https://x.com/hsorbo&quot;&gt;@hsorbo&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;ios: Add support for rootless systems. Thanks for the pair-programming,
&lt;a href=&quot;https://x.com/hsorbo&quot;&gt;@hsorbo&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;android: Fix dynamic linker compatibility regression. Thanks for the
pair-programming, &lt;a href=&quot;https://x.com/hsorbo&quot;&gt;@hsorbo&lt;/a&gt;! Kudo to &lt;a href=&quot;https://x.com/getorix&quot;&gt;@getorix&lt;/a&gt; for reporting.&lt;/li&gt;
  &lt;li&gt;gumjs: Add Worker API, so heavy processing can be moved to a background
thread, allowing hooks to be handled in a timely manner. Only implemented in
the QuickJS runtime for now. Kudos to &lt;a href=&quot;https://x.com/bezjaje&quot;&gt;@mrmacete&lt;/a&gt; for tracking down and
fixing last-minute bugs in the implementation.&lt;/li&gt;
  &lt;li&gt;linux: Improve error-handling when trying to attach to processes that are
near death.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry><entry><title type="html">Frida 16.1.3 Released</title><link href="https://frida.re/news/2023/07/14/frida-16-1-3-released/" rel="alternate" type="text/html" title="Frida 16.1.3 Released" /><published>2023-07-14T13:18:10+02:00</published><updated>2023-07-14T13:18:10+02:00</updated><id>https://frida.re/news/2023/07/14/frida-16-1-3-released</id><content type="html" xml:base="https://frida.re/news/2023/07/14/frida-16-1-3-released/">&lt;p&gt;Time for a new release, just in time for the weekend:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;server: Add missing entitlement for iOS &amp;gt;= 17. Kudos to &lt;a href=&quot;https://github.com/alexhude&quot;&gt;@alexhude&lt;/a&gt; for
helping get to the bottom of this one.&lt;/li&gt;
  &lt;li&gt;stalker: Improve exclusive store handling on arm and arm64. Instead of
potentially expanding the current block to include instructions beyond where
the block would naturally end, we move to a safer approach: Once we encounter
an exclusive store, we look back at the previously generated blocks to see if
we can find one with an exclusive load. If we do, we mark this range of blocks
as using exclusive access. We also invalidate the blocks, so that problematic
instrumentation can be omitted upon recompilation. To also allow custom
transformers to adapt their generated code, we introduce
StalkerIterator.get_memory_access(). Thanks for the fun and productive
pair-programming, &lt;a href=&quot;https://twitter.com/hsorbo&quot;&gt;@hsorbo&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;gumjs: Add &lt;em&gt;StalkerIterator.memoryAccess&lt;/em&gt;, allowing a custom transformer to
determine what kind of instrumentation is safe to add without disturbing an
exclusive store operation. Set to either ‘open’, when “noisy” instrumentation
such as callouts are safe, or ‘exclusive’, when such instrumentation is risky
and may lead to infinite loops. (Due to an exclusive store failing, and every
subsequent retry also failing.)&lt;/li&gt;
  &lt;li&gt;gumjs: Fix CModule bindings for Stalker on arm.&lt;/li&gt;
  &lt;li&gt;stalker: Fix crash on invalidation in added slabs.&lt;/li&gt;
  &lt;li&gt;arm64-writer: Add put_eor_reg_reg_reg(). Thanks for the fun and productive
pair-programming, &lt;a href=&quot;https://twitter.com/hsorbo&quot;&gt;@hsorbo&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry><entry><title type="html">Frida 16.1.2 Released</title><link href="https://frida.re/news/2023/07/11/frida-16-1-2-released/" rel="alternate" type="text/html" title="Frida 16.1.2 Released" /><published>2023-07-11T17:44:02+02:00</published><updated>2023-07-11T17:44:02+02:00</updated><id>https://frida.re/news/2023/07/11/frida-16-1-2-released</id><content type="html" xml:base="https://frida.re/news/2023/07/11/frida-16-1-2-released/">&lt;p&gt;Time for a new release to refine a few things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;darwin: Fix Stalker.follow() regression where ongoing system calls would get
brutally interrupted, typically resulting in the target crashing. Thanks for
the pair-programming, &lt;a href=&quot;https://twitter.com/hsorbo&quot;&gt;@hsorbo&lt;/a&gt;!&lt;/li&gt;
  &lt;li&gt;gumjs: Implement the WeakRef API for QuickJS.&lt;/li&gt;
  &lt;li&gt;compiler: Bump @types/frida-gum to 18.4.0.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry><entry><title type="html">Frida 16.1.1 Released</title><link href="https://frida.re/news/2023/07/01/frida-16-1-1-released/" rel="alternate" type="text/html" title="Frida 16.1.1 Released" /><published>2023-07-01T06:42:06+02:00</published><updated>2023-07-01T06:42:06+02:00</updated><id>https://frida.re/news/2023/07/01/frida-16-1-1-released</id><content type="html" xml:base="https://frida.re/news/2023/07/01/frida-16-1-1-released/">&lt;p&gt;Only a few changes this time around:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;compiler: Bump frida-compile to 16.3.0, now with TypeScript 5.1.5 and other
improvements. Among them is a fix by &lt;a href=&quot;https://twitter.com/hsorbo&quot;&gt;@hsorbo&lt;/a&gt; that changes the default
&lt;em&gt;moduleResolution&lt;/em&gt; to &lt;em&gt;Node16&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;stalker: Add Iterator.get_capstone(), so transformers can use Capstone APIs
that require the Capstone handle.&lt;/li&gt;
  &lt;li&gt;node: Fix RPC message array check. Thanks &lt;a href=&quot;https://github.com/ZachQin&quot;&gt;@ZachQin&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;</content><author><name>oleavr</name></author><category term="release" /></entry></feed>